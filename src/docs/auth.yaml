components:
  schemas:
    NewUser:
      type: object
      required:
        - firstName
        - lastName
        - email
        - passportUrl
        - gender
        - phoneNumber
        - password
      properties:
        firstName:
          type: string
          example: Maloney
        lastName:
          type: string
          example: Friesland
        email:
          type: string
          example: maloney_friesland@example.com
        otherName:
          type: string
          example: Stephen
        passportUrl:
          type: string
          example: https://res.cloudinary.com/dh3jxarvg/image/upload/v1551327976/olitorius_xnr3f8.jpg
        password:
          type: string
          example: Lkfkgkgkgkk!1
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: 0801234567890
        isAdmin:
          type: boolean
          example: false
    CreatedUser:
      type: object
      properties:
        token:
          type: string
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        otherName:
          type: string
        email:
          type: string
        passportUrl:
          type: string
        password:
          type: string
        gender:
          type: string
        phoneNumber:
          type: string
        isAdmin:
          type: boolean
        created_at:
          type: date
        updated_at:
          type: date
      example:
        id: 1
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7ImlkIjo2LCJlbWFpbCI6ImR1cm9yb3NhbndvbTFAZXhhbXBsZS5jb20ifSwiaWF0IjoxNjM3NzU3OTM1LCJleHAiOjE2MzgwMTcxMzV9.BJF9ad5N9ZDIEdNJMLti3mukcb5ITQRgz9Brr5cQM1c
        firstName: Alan
        lastName: Smith
        otherName: Miller
        email: alanSmith@example.com
        phoneNumber: "09012345678"
        gender: male
        passportUrl: https://res.cloudinary.com/dh3jxarvg/image/upload/v1551327976/olitorius_xnr3f8.jpg
        isAdmin: false
        created_at: "2021-11-24T12:45:35.348Z"
        updated_at: "2021-11-24T12:45:35.348Z"
    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password
      example:
        email: "johndoe@example.com"
        password: IYiuu96968kh$%
    GenericErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 500
          message:
            type: string
            example: Some error occurred
paths:
  /api/v1/signup:
    post:
      tags:
        - Authentication
      description: create a new user
      operationId: registerUser
      parameters: []
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/NewUser"
        required: true
      produces:
        - application/json
      responses:
        201:
          description: created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 201 success status code
                    example: "201"
                  message:
                    type: string
                    description: status message
                    example: "success"
                  user:
                    $ref: "#/components/schemas/CreatedUser"
        409:
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 409 error status code
                    example: "409"
                  message:
                    type: string
                    description: status message
                    example: "Email has already been registered"
        503:
          description: System errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 503 error status code
                    example: "503"
                  message:
                    type: string
                    description: status message
                    example: "Some error occurred"

  /api/v1/login:
    post:
      tags:
        - Authentication
      description: signs in a user
      operatinId: loginUser
      parameters: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      produces:
        - application/json
      responses:
        200:
          description: Logged in user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 200 success status code
                    example: "200"
                  message:
                    type: string
                    description: status message
                    example: "success"
                  data:
                    $ref: "#/components/schemas/CreatedUser"
        401:
          description: incorrect email/password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 401 error status code
                    example: "401"
                  message:
                    type: string
                    description: status message
                    example: "Incorrect email/password"
        400:
          description: email and/or password is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 400 error status code
                    example: "400"
                  message:
                    type: string
                    description: status message
                    example: "Email is required"
